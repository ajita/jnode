var jnodeFolder=__dirname+'/';
var cwd=process.cwd()+'/'
window={};
require('vm').runInThisContext(require('fs').readFileSync(jnodeFolder+'jquery-core.js'), 'jquery-core.js');
global.$=function(moduleName){
	if(typeof(moduleName)==='string')
	{
		if(moduleName.startsWith('./') || moduleName.startsWith('../'))
			moduleName=cwd + moduleName;
		return $[moduleName] || ($[moduleName]=require(moduleName));
	}
	if($.isFunction(moduleName))
	{
		$.get(context.request.url.pathname, moduleName);
		return $;
	}
};

jQuery.extend($, jQuery);

String.prototype.endsWith=function(s)
{
	return this.substring(this.length-s.length)==s;
};
String.prototype.startsWith=function(s)
{
	return this.substring(0,s.length)==s;
};

// var staticHandler=function(req, res)
// {
	// var filePath='.'+req.url.pathname;
	// $('fs').readFile(filePath, function(err, data){
		// if(err)
		// {
			// console.log(err);
			// res.writeHead(500, {'Content-Type':'text/plain'});
			// res.end(JSON.stringify(err));
		// }
		// res.writeHead(200);
		// res.end(data);
	// });
// }


var express=require('express');
var app=express();
$.extend($, app);
$.get('/', function(req,res){ res.redirect('/index.html') });


$.extend($, {ajax:$('http').request});

rootjQuery.ready=$.ready;
exports.run=function(host, port){
	if(typeof(server)!='undefined')
		return console.log('server already running');
	global.server=$('http').createServer(app);
	server.on('clientError', function(e){ console.log(e.message);});
	server.on('connection', function(socket){ socket.on('error', function(e){ console.log(e.message); }); });

	server.on('error', function(e) {
		console.log('problem with request: ' + e.message);
	});
	server.listen(port, host);
	console.log('Server running at http://'+host+':'+port+'/');
}

var rewrite=function(target)
{
	return function(req,res,next){ 
		$.each($.routes.get, function(){
			if(this.match(target))
			{
				$.each(this.callbacks,function(){
					this(req,res,next);
				});
				next('route');
			}
		});
	}
}

exports.init=function(config)
{
	$.use(function(req,res,next)
	{
		console.log(req.path);
		next();
	});
	
	for(var route in config.routes)
	{
		$.get(route, function(req,res){ res.redirect(config.routes[req.route.path]) });
	}
	for(var staticFolder in config["static"])
	{
		app.use(config["static"][staticFolder], express.static(cwd+staticFolder));
		console.log('registered static handler for '+cwd+staticFolder+' at '+config["static"][staticFolder]);
	}
	app.use(app.router);
	exports.run(config.host, config.port);
}

var jnodeConfig=cwd+'jnode.config';
if($('fs').existsSync(jnodeConfig))
{
$.configure(function(){
	var config=JSON.parse($('fs').readFileSync(jnodeConfig));
	for(var key in config)
	{
		console.log('initializing '+key);
		if(key.substring(0,2)!='./')
			context={request:{url:{pathname:key}}};
		else
			context={request:{url:{pathname:key.substring(1)}}};
			
		var init;
		if(key=='jnode')
			init=exports.init;
		else
			init=$(key).init;
		if(init)
			init(config[key]);
		console.log('initialized '+key);
	}
	context=null;
});
}

if(require.main===module)
{
	exports.run('192.168.68.11',81);
}